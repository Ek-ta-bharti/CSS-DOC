Pseudo-classes in CSS are used to define special states of elements. They allow you to apply styles to elements based on their state or relationship with other elements, without the need for additional classes or JavaScript. Here are some commonly used pseudo-classes:

1. `:hover`: Applies styles when the mouse pointer is over the element.
2. `:active`: Applies styles when the element is being activated, such as when a link is clicked.
3. `:focus`: Applies styles when the element is currently focused, such as when an input field is selected.
4. `:visited`: Applies styles to links that have been visited by the user.
5. `:first-child`: Selects the first child element of its parent.
6. `:last-child`: Selects the last child element of its parent.
7. `:nth-child()`: Selects elements based on their position within their parent.

Here's an example demonstrating the use of some pseudo-classes:

```css
/* Style links */
a {
  color: blue; /* Default color for links */
  text-decoration: none; /* Remove underline */
}

/* Change link color on hover */
a:hover {
  color: red; /* Change link color to red on hover */
}

/* Style input fields when focused */
input:focus {
  border: 2px solid green; /* Add a green border when input is focused */
}

/* Style the first paragraph of each div */
div p:first-child {
  font-weight: bold; /* Make the first paragraph bold */
}
```

In this example:

- `a:hover` changes the color of links when hovered over.
- `input:focus` adds a green border to input fields when they are focused.
- `div p:first-child` makes the first paragraph in each div bold.

These pseudo-classes allow you to create dynamic and interactive styles based on user interaction or the structure of the HTML document. They are essential tools for creating engaging and user-friendly web experiences.