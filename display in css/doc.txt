Combinators in CSS are used to select elements based on their relationship with other elements in the HTML structure. There are several types of combinators in CSS:

### 1. Descendant Selector (Whitespace):
Selects an element that is a descendant of another specified element.

```css
div p {
  /* Selects all <p> elements that are descendants of <div> elements */
}
```

### 2. Child Selector (`>`):
Selects an element that is a direct child of another specified element.

```css
ul > li {
  /* Selects all <li> elements that are direct children of <ul> elements */
}
```

### 3. Adjacent Sibling Selector (`+`):
Selects an element that is immediately preceded by a specified sibling element.

```css
h2 + p {
  /* Selects all <p> elements that are immediately preceded by an <h2> element */
}
```

### 4. General Sibling Selector (`~`):
Selects all sibling elements that follow a specified element.

```css
h2 ~ p {
  /* Selects all <p> elements that are siblings of <h2> elements and appear after them */
}
```

### Example:
Consider the following HTML structure:

```html
<div>
  <h2>Title</h2>
  <p>Paragraph 1</p>
  <p>Paragraph 2</p>
</div>
```

Here's how you can use combinators to style elements:

```css
/* Selects all <p> elements inside <div> */
div p {
  font-size: 14px;
}

/* Selects only the <p> elements that are direct children of <div> */
div > p {
  color: blue;
}

/* Selects the <p> element that directly follows the <h2> element */
h2 + p {
  font-weight: bold;
}

/* Selects all <p> elements that are siblings of <h2> elements */
h2 ~ p {
  background-color: lightgray;
}
```

These combinators allow for more specific targeting of elements based on their relationships in the HTML structure, providing greater flexibility in styling web pages.