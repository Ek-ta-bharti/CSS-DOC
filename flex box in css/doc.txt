Flexbox is a powerful layout model in CSS that allows you to design more flexible and efficient layouts for containers and their children. It provides a more efficient way to align, distribute, and reorder elements within a container along a single axis (row or column) or both axes, depending on the flex container's orientation.

Here's a basic example of how to use Flexbox:

HTML:
```html
<div class="container">
  <div class="item">Item 1</div>
  <div class="item">Item 2</div>
  <div class="item">Item 3</div>
</div>
```

CSS:
```css
.container {
  display: flex; /* Set the container as a flex container */
  justify-content: space-between; /* Align items along the main axis with space between */
  align-items: center; /* Align items along the cross axis to the center */
}

.item {
  width: 100px; /* Set a fixed width for each item */
  height: 100px; /* Set a fixed height for each item */
  background-color: #f2f2f2; /* Background color for items */
  border: 1px solid #ccc; /* Border for items */
}
```

In this example:

- `display: flex;` sets the container as a flex container.
- `justify-content: space-between;` aligns the items along the main axis with space distributed between them.
- `align-items: center;` aligns the items along the cross axis to the center.

This is just a simple example, and Flexbox offers many more properties and features for creating complex layouts. Some key properties include `flex-direction`, `flex-wrap`, `flex`, `align-self`, and `order`, among others, which give you fine control over the layout of flex items within a flex container.

Flexbox is widely supported by modern browsers and is commonly used for creating responsive web layouts. It simplifies complex layout challenges that were traditionally difficult to achieve with CSS alone.